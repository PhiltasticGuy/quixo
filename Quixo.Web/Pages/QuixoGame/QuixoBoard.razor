@page "/quixo"
@using Quixo.Core.Players
@using Quixo.Core.MVC
@inject GameController Controller

@if (!Controller.Model.IsGameReady)
{
    <div class="container">
        <h2>Nouvelle partie</h2>

        <EditForm Model="@this">
            <div class="form-row">
                <div class="col-md-6">
                    <div class="form-row justify-content-center">
                        <fieldset class="form-group col-md-8">
                            <legend>Choisir le premier joueur:</legend>

                            <InputRadioGroup Name="grpPlayer1" @bind-Value="_player1Type">
                                <div class="form-check">
                                    <label>
                                        <InputRadio Name="grpPlayer1" Value="PlayerType.Human" />Humain
                                    </label>
                                </div>
                                <div class="form-check">
                                    <label>
                                        <InputRadio Name="grpPlayer1" Value="PlayerType.RandomAi" />IA - Mouvements aléatoires
                                    </label>
                                </div>
                                <div class="form-check">
                                    <label>
                                        <InputRadio Name="grpPlayer1" Value="PlayerType.EasyAi" />IA - Facile
                                    </label>
                                </div>
                                <div class="form-check">
                                    <label>
                                        <InputRadio Name="grpPlayer1" Value="PlayerType.MediumAi" />IA - Intermédiaire
                                    </label>
                                </div>
                                <div class="form-check">
                                    <label>
                                        <InputRadio Name="grpPlayer1" Value="PlayerType.HardAi" />IA - Difficile
                                    </label>
                                </div>
                            </InputRadioGroup>
                        </fieldset>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-row justify-content-center">
                        <fieldset class="form-group col-md-8">
                            <legend>Choisir le second joueur:</legend>

                            <InputRadioGroup Name="grpPlayer2" @bind-Value="_player2Type">
                                <div class="form-check">
                                    <label>
                                        <InputRadio Name="grpPlayer2" Value="PlayerType.Human" />Humain
                                    </label>
                                </div>
                                <div class="form-check">
                                    <label>
                                        <InputRadio Name="grpPlayer2" Value="PlayerType.RandomAi" />IA - Mouvements aléatoires
                                    </label>
                                </div>
                                <div class="form-check">
                                    <label>
                                        <InputRadio Name="grpPlayer2" Value="PlayerType.EasyAi" />IA - Facile
                                    </label>
                                </div>
                                <div class="form-check">
                                    <label>
                                        <InputRadio Name="grpPlayer2" Value="PlayerType.MediumAi" />IA - Intermédiaire
                                    </label>
                                </div>
                                <div class="form-check">
                                    <label>
                                        <InputRadio Name="grpPlayer2" Value="PlayerType.HardAi" />IA - Difficile
                                    </label>
                                </div>
                            </InputRadioGroup>
                        </fieldset>
                    </div>
                </div>
            </div>
        </EditForm>

        <div class="row justify-content-center">
            <div class="col-4 text-center">
                <button class="btn btn-primary" @onclick="OnSelectPlayers">Choisir ces joueurs</button>
            </div>
        </div>
    </div>
}
else
{
    <div class="container">
        <h2>@Title</h2>

        @if (Controller.Model.Winner != null)
        {
            <div class="row justify-content-center">
                <div class="col-sm-8 text-center">
                    <span class="message-winner">Le joueur #@Controller?.Model.Winner?.Id a gagné la partie!</span>
                </div>
            </div>
        }
        else
        {
            <div class="row justify-content-center">
                <div class="col-sm-8">
                    <div class="row justify-content-center">
                        <div class="col-sm-3">
                            <span class="font-weight-bold">Current Turn: </span>
                        </div>
                        <div class="col-sm-9">
                            Player #@Controller?.Model.CurrentPlayer?.Id
                        </div>
                    </div>
                    <div class="row justify-content-center">
                        <div class="col-sm-3">
                            <span class="font-weight-bold">Message: </span>
                        </div>
                        <div class="col-sm-9">
                            @Message
                        </div>
                    </div>
                </div>
            </div>
        }
        <div class="quixo-board row justify-content-center">
            <div class="col-sm-8">
                @for (int i = 0; i < Controller.Model.Board.Pieces.Length;)
                {
                    <div class="row justify-content-center">
                        @{ int cols = 0; }
                        @while (cols++ < 5 && i < Controller.Model.Board.Pieces.Length)
                        {
                            int j = i++;
                            Core.QuixoPiece piece = Controller.Model.Board.Pieces[j];
                            <QuixoPiece Piece="piece" IsSelected="@(j == Controller.SelectedPieceIndex)" Click="args => OnClickPiece(j)" @key="j"></QuixoPiece>
                        }
                    </div>
                }
            </div>
        </div>

        <div class="row justify-content-center">
            @if (!Controller.Model.IsGameRunning)
            {
                <div class="col-4 text-center">
                    <button class="btn btn-primary" @onclick="OnStartGame">Lancer la partie!</button>
                </div>
            }
            else
            {
                <div class="col-4 text-center">
                    <button class="btn btn-primary" @onclick="OnReset">Recommencer cette partie</button>
                </div>
                <div class="col-4 text-center">
                    <button class="btn btn-primary" @onclick="OnNewGame">Créer une nouvelle partie</button>
                </div>
            }
        </div>
    </div>
}

@code {
    private string Title = "Wonderful Quixolicious Game";
    private string Message = "Test";

    private PlayerType _player1Type;
    private PlayerType _player2Type;

    private System.Timers.Timer _timer;

    protected async override Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        // Pour les joueurs IA.
        _timer = new System.Timers.Timer(500);
        _timer.Elapsed += async (s, e) =>
        {
            await InvokeAsync(StateHasChanged);
        };
    }

    public void OnSelectPlayers()
    {
        Controller.SelectPlayers(_player1Type, _player2Type);
    }

    public void OnStartGame()
    {
        Controller.StartGame(_timer);
    }

    public void OnReset()
    {
        Controller.RestartCurrentGame();
    }

    public void OnNewGame()
    {
        Controller.ClearExistingGame();
    }

    public void OnClickPiece(int index)
    {
        Controller.SelectPiece(index);
    }
}
